"""
Sets up VEP cache and plugins, and then uses them to annotate VCF
"""

from pathlib import Path

# datasets to use for annotations
configfile: "configs/datasets.yaml"

EXTERNAL_DIR = Path("data/external")
# RAW_DIR = Path("data/raw")
# INTERIM_DIR = Path("data/interim")
PROCESSED_DIR = Path("data/processed")


# INPUT_VCF = f"/data/project/worthey_lab/projects/CF_TLOAF_PFarrell/analysis/select_vars/cross_sample_vars.vcf.gz"
INPUT_VCF = ".test/data/testing_variants_hg38.vcf"

# VEP parameters
VEP_CACHE = 'homo_sapiens_refseq'
SPECIES = 'homo_sapiens'
REF_BUILD = "GRCh38"
ENSEMBL_DATASET_VERSION = "102"
HGVS = False
STATS = False

rule all:
    input:
        PROCESSED_DIR / "vep" / "annotated.vcf",


rule get_vep_cache:
    output:
        cache = directory(EXTERNAL_DIR / "vep" / "cache" / VEP_CACHE),
    params:
        species = VEP_CACHE,
        build = REF_BUILD,
        release = ENSEMBL_DATASET_VERSION,
        plugins = "CADD"
    message:
        "Retrieves VEP cache data"
    # wrapper:
    #     "0.59.2/bio/vep/cache"
    conda:
        "configs/env/vep.yaml"
    shell:
        r"""
        vep_install --AUTO cfp \
            --SPECIES {params.species} \
            --ASSEMBLY {params.build} \
            --PLUGINS {params.plugins} \
            --CACHE_VERSION {params.release} \
            --CACHEDIR {output.cache} \
            --CONVERT \
            --NO_UPDATE
        """


rule get_vep_plugins:
    output:
        directory(EXTERNAL_DIR / "vep" / "plugins"),
    message:
        "Downloads VEP plugins"
    params:
        release = ENSEMBL_DATASET_VERSION
    wrapper:
        "0.59.2/bio/vep/plugins"


rule annotate_variants:
    input:
        calls = INPUT_VCF,
        cache = EXTERNAL_DIR / "vep" / "cache" / VEP_CACHE,
        plugins = EXTERNAL_DIR / "vep" / "plugins",
        cadd_snv = config['cadd_snv'],
        cadd_indel = config['cadd_indel'],
        gerp = config['gerp'],
        # gnomad_exomes = GNOMAD_EXOMES,
        gnomad_genomes = config['gnomad_genomes'],
        clinvar = config['clinvar'],
        dbNSFP = config['dbNSFP'],
    output:
        calls = PROCESSED_DIR / "vep" / "annotated.vcf",
        # stats = PROCESSED_DIR / "vep" / "stats.html"
    message:
        "Annotated vcf using VEP with CADD, gnomad-exomes, gnomad-genomes and GERP. "
        f"VEP cache used: {VEP_CACHE}, ref build: {REF_BUILD}, Ensemble version: {ENSEMBL_DATASET_VERSION}"
    params:
        release = ENSEMBL_DATASET_VERSION,
        species = SPECIES,
        build = REF_BUILD,
        refseq_flag = "--refseq" if 'refseq' in VEP_CACHE else "",
        hgvs_flag = "--hgvs" if HGVS else "",
        stats_flag = "--stats_file {output.stats}" if STATS else "--no_stats",
        gnomad_fields = "AC,AN,AF,AF_afr,AF_afr_female,AF_afr_male,AF_ami,AF_ami_female,AF_ami_male,AF_amr,AF_amr_female,AF_amr_male,AF_asj,AF_asj_female,AF_asj_male,AF_eas,AF_eas_female,AF_eas_male,AF_female,AF_fin,AF_fin_female,AF_fin_male,AF_male,AF_nfe,AF_nfe_female,AF_nfe_male,AF_oth,AF_oth_female,AF_oth_male,AF_raw,AF_sas,AF_sas_female,AF_sas_male",
        clinvar_fields = "AF_ESP,AF_EXAC,AF_TGP,ALLELEID,CLNDN,CLNDNINCL,CLNDISDB,CLNDISDBINCL,CLNREVSTAT,CLNSIG,CLNSIGCONF,CLNSIGINCL,CLNVC,GENEINFO,MC,ORIGIN,RS,SSR",
        dbNSFP_fields = "SIFT_score,Polyphen2_HDIV_score,Polyphen2_HVAR_score,LRT_score,MutationTaster_score,MutationAssessor_score,FATHMM_score,PROVEAN_score,VEST4_score,MetaSVM_score,MetaLR_score,M-CAP_score,CADD_phred,DANN_score,fathmm-MKL_coding_score,GenoCanyon_score,integrated_fitCons_score,GERP++_RS,phyloP100way_vertebrate,phyloP30way_mammalian,phastCons100way_vertebrate,phastCons30way_mammalian,SiPhy_29way_logOdds,Eigen-raw_coding,Eigen-raw_coding_rankscore,Eigen-phred_coding,Eigen-PC-raw_coding,Eigen-PC-raw_coding_rankscore,Eigen-PC-phred_coding",
    threads: 4
    # wrapper:
    #     "0.64.0/bio/vep/annotate"
    conda:
        "configs/env/vep.yaml"
    shell:
        r"""
        (bcftools view {input.calls} | \
            vep --fork {threads} \
                --format vcf \
                --vcf \
                --offline \
                --cache \
                --cache_version {params.release} \
                --species {params.species} \
                --assembly {params.build} \
                {params.refseq_flag} {params.hgvs_flag} \
                --dir_cache {input.cache} \
                --dir_plugins {input.plugins} \
                --plugin CADD,{input.cadd_snv},{input.cadd_indel} \
                --plugin dbNSFP,{input.dbNSFP},{params.dbNSFP_fields} \
                --custom {input.gerp},GERP,bed \
                --custom {input.gnomad_genomes},gnomADv3,vcf,exact,0,{params.gnomad_fields} \
                --custom {input.clinvar},clinvar,vcf,exact,0,{params.clinvar_fields} \
                {params.stats_flag} \
                --output_file STDOUT | \
            bcftools view -Ov > {output.calls})
        """


